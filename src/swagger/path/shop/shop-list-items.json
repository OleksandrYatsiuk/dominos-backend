{
    "get": {
        "summary": "Show List of Shops",
        "security": [],
        "tags": [
            "Shop"
        ],
        "operationId": "shopsList",
        "parameters": [
            {
                "in": "query",
                "name": "limit",
                "description": "The number of items returned.",
                "required": false,
                "example": "20",
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 20
                }
            },
            {
                "in": "query",
                "name": "page",
                "description": "The number of page",
                "required": false,
                "example": 1,
                "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1
                }
            },
            {
                "in": "query",
                "name": "sort",
                "description": "Sort ordering. You can use sort=[-]fieldName as parameter in Url",
                "required": false,
                "schema": {
                    "enum": [
                        "address",
                        "-address",
                        "createdAt",
                        "-createdAt"
                    ]
                }
            }
        ],
        "responses": {
            "200": {
                "description": "OK",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "../../schemas/status200.json"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "allOf": [
                                                    {
                                                        "$ref": "../../schemas/shops.json"
                                                    },
                                                    {
                                                        "$ref": "../../schemas/time.json"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "401": {
                "description": "Unprocessable Entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "../../schemas/status401.json"
                        }
                    }
                }
            }
        }
    },
    "post": {
        "summary": "Create Shop",
        "description": "Allowed roles: Administrator, Project Manager",
        "tags": [
          "Shop"
        ],
        "operationId": "createShop",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../../schemas/status201.json"
                    },
                    {
                      "properties": {
                        "result": {
                          "allOf": [
                            {
                              "$ref": "../../schemas/shop.json"
                            },
                            {
                              "$ref": "../../schemas/time.json"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../schemas/status401.json"
                }
              }
            }
          },
          "403": {
            "description": "403 Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../schemas/status403.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "../../schemas/status422.json"
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../schemas/shop.json"
              }
            }
          }
        }
      }
}